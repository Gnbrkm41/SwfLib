namespace SwfLib.Avm2.Opcodes {
    public enum Avm2Opcode : byte {
        OP_raw = 0x00,
        OP_bkpt = 0x01,
        OP_nop = 0x02,
        OP_throw = 0x03,
        GetSuper = 0x04,
        OP_setsuper = 0x05,
        Dxns = 0x06,
        DxnsLate = 0x07,
        OP_kill = 0x08,
        OP_label = 0x09,
        OP_ifnlt = 0x0C,
        OP_ifnle = 0x0D,
        OP_ifngt = 0x0E,
        OP_ifnge = 0x0F,
        OP_jump = 0x10,
        OP_iftrue = 0x11,
        OP_iffalse = 0x12,
        OP_ifeq = 0x13,
        OP_ifne = 0x14,
        OP_iflt = 0x15,
        OP_ifle = 0x16,
        OP_ifgt = 0x17,
        OP_ifge = 0x18,
        OP_ifstricteq = 0x19,
        OP_ifstrictne = 0x1A,
        OP_lookupswitch = 0x1B,
        OP_pushwith = 0x1C,
        OP_popscope = 0x1D,
        OP_nextname = 0x1E,
        OP_hasnext = 0x1F,
        OP_pushnull = 0x20,
        OP_pushundefined = 0x21,
        OP_pushuninitialized = 0x22,
        OP_nextvalue = 0x23,
        OP_pushbyte = 0x24,
        OP_pushshort = 0x25,
        OP_pushtrue = 0x26,
        OP_pushfalse = 0x27,
        OP_pushnan = 0x28,
        OP_pop = 0x29,
        Dup = 0x2A,
        OP_swap = 0x2B,
        OP_pushstring = 0x2C,
        OP_pushint = 0x2D,
        OP_pushuint = 0x2E,
        OP_pushdouble = 0x2F,
        OP_pushscope = 0x30,
        OP_pushnamespace = 0x31,
        OP_hasnext2 = 0x32,
        OP_pushdecimal = 0x33,
        OP_pushdnan = 0x34,
        OP_li8 = 0x35,
        OP_li16 = 0x36,
        OP_li32 = 0x37,
        OP_lf32 = 0x38,
        OP_lf64 = 0x39,
        OP_si8 = 0x3A,
        OP_si16 = 0x3B,
        OP_si32 = 0x3C,
        OP_sf32 = 0x3D,
        OP_sf64 = 0x3E,
        OP_newfunction = 0x40,
        Call = 0x41,
        Construct = 0x42,
        CallMethod = 0x43,
        CallStatic = 0x44,
        CallSuper = 0x45,
        CallProperty = 0x46,
        OP_returnvoid = 0x47,
        OP_returnvalue = 0x48,
        ConstructSuper = 0x49,
        ConstructProp = 0x4A,
        OP_callsuperid = 0x4B,
        CallPropLex = 0x4C,
        OP_callinterface = 0x4D,
        CallSuperVoid = 0x4E,
        CallPropVoid = 0x4F,
        OP_sxi1 = 0x50,
        OP_sxi8 = 0x51,
        OP_sxi16 = 0x52,
        OP_applytype = 0x53,
        OP_newobject = 0x55,
        OP_newarray = 0x56,
        OP_newactivation = 0x57,
        OP_newclass = 0x58,
        GetDescendants = 0x59,
        OP_newcatch = 0x5A,
        OP_deldescendants = 0x5B,
        FindPropStrict = 0x5D,
        FindProperty = 0x5E,
        OP_finddef = 0x5F,
        GetLex = 0x60,
        OP_setproperty = 0x61,
        GetLocal = 0x62,
        OP_setlocal = 0x63,
        GetGlobalScope = 0x64,
        GetScopeObject = 0x65,
        GetProperty = 0x66,
        OP_getpropertylate = 0x67,
        OP_initproperty = 0x68,
        OP_setpropertylate = 0x69,
        DeleteProperty = 0x6A,
        OP_deletepropertylate = 0x6B,
        GetSlot = 0x6C,
        OP_setslot = 0x6D,
        GetGlobalSlot = 0x6E,
        OP_setglobalslot = 0x6F,
        ConvertS = 0x70,
        EscXElem = 0x71,
        EscXAttr = 0x72,
        ConvertI = 0x73,
        ConvertU = 0x74,
        ConvertD = 0x75,
        ConvertB = 0x76,
        ConvertO = 0x77,
        CheckFilter = 0x78,
        OP_convert_m = 0x79,
        OP_convert_m_p = 0x7A,
        Coerce = 0x80,
        OP_coerce_b = 0x81,
        CoerceA = 0x82,
        OP_coerce_i = 0x83,
        OP_coerce_d = 0x84,
        CoerceS = 0x85,
        AsType = 0x86,
        AsTypeLate = 0x87,
        OP_coerce_u = 0x88,
        OP_coerce_o = 0x89,
        OP_negate_p = 0x8F,
        OP_negate = 0x90,
        OP_increment = 0x91,
        OP_inclocal = 0x92,
        Decrement = 0x93,
        DecLocal = 0x94,
        OP_typeof = 0x95,
        OP_not = 0x96,
        BitNot = 0x97,
        OP_concat = 0x9A,
        OP_add_d = 0x9B,
        OP_increment_p = 0x9C,
        OP_inclocal_p = 0x9D,
        OP_decrement_p = 0x9E,
        OP_declocal_p = 0x9F,
        Add = 0xA0,
        OP_subtract = 0xA1,
        OP_multiply = 0xA2,
        Divide = 0xA3,
        OP_modulo = 0xA4,
        OP_lshift = 0xA5,
        OP_rshift = 0xA6,
        OP_urshift = 0xA7,
        BitAnd = 0xA8,
        BitOr = 0xA9,
        BitXor = 0xAA,
        Equal = 0xAB,
        OP_strictequals = 0xAC,
        OP_lessthan = 0xAD,
        OP_lessequals = 0xAE,
        GreaterThan = 0xAF,
        GreaterEquals = 0xB0, //todo: original documentation has misprint GreaterThan and GreaterEquals has the same code...
        OP_instanceof = 0xB1,
        OP_istype = 0xB2,
        OP_istypelate = 0xB3,
        OP_in = 0xB4,
        OP_add_p = 0xB5,
        OP_subtract_p = 0xB6,
        OP_multiply_p = 0xB7,
        OP_divide_p = 0xB8,
        OP_modulo_p = 0xB9,
        OP_increment_i = 0xC0,
        DecrementI = 0xC1,
        OP_inclocal_i = 0xC2,
        DecLocalI = 0xC3,
        OP_negate_i = 0xC4,
        AddI = 0xC5,
        OP_subtract_i = 0xC6,
        OP_multiply_i = 0xC7,
        GetLocal0 = 0xD0,
        GteLocal1 = 0xD1,
        GetLocal2 = 0xD2,
        GetLocal3 = 0xD3,
        OP_setlocal0 = 0xD4,
        OP_setlocal1 = 0xD5,
        OP_setlocal2 = 0xD6,
        OP_setlocal3 = 0xD7,
        Debug = 0xEF,
        DebugLine = 0xF0,
        DebugFile = 0xF1,
        OP_bkptline = 0xF2,
        OP_timestamp = 0xF3,

    }
}
